# User types
type User {
  id: ID!
  googleId: String!
  displayName: String!
  email: String!
  avatar: String!
  ratedPlaces: [Place!]
}

# Place types

type Place {
  id: ID! 
  type: String!
  geometry: Geometry!
  properties: PlaceProperties!
}

type Geometry {
  type: String!
  coordinates: [Float!]!
}

type PlaceProperties {
  id: ID!
  name: String!
  description: String!
  address: String!
  image: String!
  instagram: String!
  averageRating: Float
  ratingCount: Int!
  favoriteCount: Int!
  isFavorite: Boolean!
  reviews: [Review!]!
}

type PlaceDetails {
  id: ID!
  reviews: [Review!]!
  favoriteCount: Int!
  isFavorite: Boolean!
}

# Queries
type Query {
  currentUser: User
  places: [Place!]!
  placeDetails(placeId: ID!): PlaceDetails!
}

# Mutations
type Mutation {
  loginWithGoogle(code: String!): AuthPayload
  logout: LogoutResponse
  addReview(placeId: ID!, text: String, rating: Float): AddReviewResponse!
  toggleFavorite(placeId: ID!): Boolean!
  deleteReview(reviewId: ID!): DeleteReviewResult!
}

type AddReviewResponse {
  review: Review!
  averageRating: Float!
  ratingCount: Int!
}

type DeleteReviewResult {
  reviewId: ID!
  success: Boolean!
  message: String!
}

type Review {
  id: ID!
  text: String!
  userId: ID!
  userName: String!
  userAvatar: String!
  placeId: ID!
  createdAt: String!
  isOwnReview: Boolean!
  userRating: Float
}


type FavoriteActionResult {
  success: Boolean!
  message: String
  requiresAuth: Boolean!
  place: Place
}

type AuthPayload {
  user: User!
}

type LogoutResponse {
  message: String!
}
