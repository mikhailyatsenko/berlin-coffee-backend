# User types
type User {
  id: ID!
  googleId: String!
  displayName: String!
  email: String!
  avatar: String!
  ratedPlaces: [Place!]
}

# Place types

type Place {
  type: String!
  geometry: Geometry!
  properties: PlaceProperties!
}

type Geometry {
  type: String!
  coordinates: [Float!]!
}

type PlaceProperties {
  id: ID!
  name: String!
  description: String!
  address: String!
  image: String!
  instagram: String!
  averageRating: Float
  ratingCount: Int!
  favoriteCount: Int!
  userRating: Float 
  isFavorite: Boolean!
  reviews: [Review!]!
}

# Queries
type Query {
  currentUser: User
  places: [Place!]!
  placeReviews(placeId: ID!): [Review!]!
}

# Mutations
type Mutation {
  loginWithGoogle(code: String!): AuthPayload
  logout: LogoutResponse
  ratePlace(placeId: ID!, rating: Int!): PlaceProperties
  addReview(placeId: ID!, text: String!): Review
  toggleFavorite(placeId: ID!): FavoriteActionResult!
  deleteReview(reviewId: ID!): DeleteReviewResult!
}

type DeleteReviewResult {
  success: Boolean!
  message: String
}

type Review {
  id: ID!
  userName: String!
  text: String!
  userId: ID!
  placeId: ID!
  isOwnReview: Boolean!
  createdAt: String!
}

type FavoriteActionResult {
  success: Boolean!
  message: String
  requiresAuth: Boolean!
  place: Place
}

type AuthPayload {
  user: User!
}

type LogoutResponse {
  message: String!
}

type RatePlaceResponse {
  success: Boolean!
}